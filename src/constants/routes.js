const routes = {
    //Packaging-GIN Release Routes://New packing APIs
    quoteItemsInfo: "packing-getQuoteLineCreationInfo",
    insertQuoteItem: "packing-insertQuoteLineItemDetail",
    getAllPackingRequests: 'packing-getAllPackingRequests',
    viewPackingRequest: 'packing-viewPackingRequest',
    requestNewPackType: 'packing-requestNewPackType',
    approveNewPackType: 'packing-approveNewPackType',
    rejectNewPackType: 'packing-rejectNewPackType',
    //--------
    login: "dev-testenvLogin",
    forget: "dev-forgotPassword",
    confirmForgotPassword: "dev-confirmForgotPassword",
    registerUser: "dev-userRegistration",
    insertUser: "dev-insertUserDetails",
    // Crdev-eatedUser:"createdSupplier",
    listPoolUsers: "dev-listPoolUsers",
    // usdev-erStatus: "userStatus",
    userStatus: "dev-enableUser",
    userStatusDisable: "dev-disableUser",
    changePassword: "dev-changePassword",
    // ledev-ads: "getAllLeads",
    leads: "getLeadsInfo",  
    accounts: "getAllAccounts",
    contacts: "getAllContacts",
    quotes: "getAllQuotes",
    userRole: "dev-getUserRole",
    userDetail: "getUserDetail",
    userAllDetail: "dev-getAllUsersDetail",
    companyName: "dev-getCompanyNames",
    designation: "dev-getDesignation",
    departmentName: "dev-getDepartmentNames",
    division: "dev-getDivisions",
    delegatedApprover: "dev-getDelegatedApprover",
    country: "getCountry",
    state: "getState",
    city: "getCity",
    profile: "dev-getUserProfile",
    insertLead: "dev-insertLeadDetails",
    leadsInfo: "dev-getLeadCreationInfo",
    leadsDetail: "dev-getLeadDetailonHyperLink",
    contactsInleadToAccount: "dev-getContactsInLeadtoAcc",
    convertLeadToAccount: "insertLeadIntoAccount",
    getUsers: "getUsers",
    quotesInfo: "dev-getQuotationCreationInfo",
    insertQuote: "dev-insertQuotationDetail",
    sampleRequests: "getAllSampleRequests",
    accountsDetail: "getAccountHyperlink",
    accountContact: "cvuAccountContactDetails",
    accountSample: "dev-cvuSampleRequest",
    insertSample: "insertOrUpdateSampleRequest",
    viewSample: "viewSampleRequest",
    getQuoteItems: "dev-getAllQuoteLineItems",
    updateQuoteItem: "dev-updateQuoteLineInfo",
    updateQuoteStatus: "dev-updateQuotationStatus",
    getAccountContacts: "getAccountContacts",
    getAccountSamples: "getAccountSamples",
    getAccountQuotes: "getAccountQuotes",
    reassignLead: "dev-reassignLead",
    reassignAccount: "reassignAccount",
    quotesInfoErp: "dev-getQuoteInformation",
    quoteItemSystemInfo: "dev-qqiSystemMasterInfo",
    quoteItemSystemPackInfo: "dev-qqiSamplePackDetails",
    quoteRequestPrice: "dev-quotationPriceRequest",
    quoteSamples: "dev-qqiSampleGCConfig",
    quoteSamplePricing: "dev-updateQuotePricingInfo",
    quoteRequestGCRates: "dev-reqForGcRates",
    currencyConversion: "dev-qqiCurrencyStamp",
    poCreationInfo: "dev-getPOFormInfo",
    PoCreationInfo: "dev-getPoCreationInfo",
    getAllPurchaseOrders: "listPurchaseOrders",
    createGCPo: "dev-insertGCPODetails",
    approvedQuotesOnGC: "dev-listApprovedQtLinesOnGc",
    topApprovedPos: "dev-listTop3ApprovedPos",
    topMrin: "dev-topMrinDetail",
    poDetails: "dev-viewGCPODetails",
    portAndOriginForPo: "dev-getPortandOriginForPO",
    poDocuments: "dev-poDocumentsUpload",
    updateGCPo: "dev-editGCPODetails",
    gCPoStatus: "dev-updateGcPoStatus",
    getProductAndCategory: "getcreateSRItemForm",
    createVendor: "dev-insertVendorGCPO",
    //mridev-n
    getAllmrins: 'listMrins',
    mrinDetails: 'dev-viewMrin',
    createOrUpdateMrin: 'dev-insertOrUpdateMrin',
    CloseButton: 'closeButton',
    // endev-tity and po details
    getMrinCreationInfo: 'getMrinCreationInfo',
    // mrdev-in list for po
    getMrinListForPoView: 'dev-getMrinListForPoView',
    // Gcdev-s
    getGCs: 'listGCDetails',
    getGCDetail: 'viewGCDetail',
    // Sudev-pplier
    getSuppliers: 'dev-getSuppliers',
    getSupplierList: 'listSuppliers',
    editSuppliers: 'dev-editSupplier',
    curdSupplier: 'cvuSupplier',
    getGcCreationInfo: 'getGCCreationInfo',
    createOrUpdateGcDetail: 'insertOrEditGCDetail',
    vendorLogin: 'dev-vendorLogin',
    getDispatchDetails: 'dev-viewGCPODispatchDetails',
    updateGCPoDispatch: "dev-editGCPODispatchDetails",
    deleteGCPOAutoDispatch: 'dev-deleteGCPOAutoDispatch',
    balQuoteQtyForPoOrder: 'dev-getBalQuoteQtyForPoOrder',
    getGCDebitNoteCreationInfo: 'dev-getGCDebitNoteCreationInfo',
    listGCDebitNoteDetails: 'listGCDebitNoteDetails',
    insertOrEditGCDebitNoteDetail: 'dev-insertOrEditGCDebitNoteDetail',
    viewGCDebitNoteDetail: 'dev-viewGCDebitNoteDetail',
    updateGcDebitNoteStatus: 'dev-updateGcDebitNoteStatus',
    createorupdateSampleLineItem: 'insertOrUpdateSampleLineItem',
    getNotifications: 'getNotifications',
    viewAndDeleteSampleLineItem: 'viewAndDeleteSampleLineItem',
    updateMRINGCSpec: 'dev-updateMRINGCSpec',
    sendEmail: 'dev-sendITSupportEmail',
    releaseDebitNote: 'dev-releaseDebitNote',
    taxMaster: 'dev-cvu_Tax_Master',
    taxList: 'dev-list_Tax_Grid',
    getbillingaddress: 'getbillingaddress',
    getshippingaddress: 'getshippingaddress',


    getConversatioRatio: 'getConversatioRatio',
    getSamplesInfo: 'getSamplesInfo',
    getSelectedSamplesForPricing: 'getSelectedSamplesForPricing',
    updateQuotationStatusForPricing: 'updateQuotationStatusForPricing',
    updateGcPriceOnQuotes: 'updateGcPriceOnQuotes',
    getOtherFactorsInfo: 'getOtherFactorsInfo',
    updateOtherFactorsInfo: 'updateOtherFactorsInfo',
    updateSamplesInfoForPricing: 'updateSamplesInfoForPricing',
    getPackingInfoForPricing: 'getPackingInfoForPricing',
    getFinalisedSamples: 'getFinalisedSamples',
    updateConfirmSample: 'updateConfirmSample',
    insertPricingInfo: 'insertPricingInfo',
    getGCDataOnQuotes: 'getGCDataOnQuotes',
}

export default routes;
